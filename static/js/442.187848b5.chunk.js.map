{"version":3,"file":"static/js/442.187848b5.chunk.js","mappings":"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","sources":["pages/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ConatctList.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrap = styled.div`\n  width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n  border-radius: 10px;\n  background-color: #cc9966;\n`;\n\nexport const TitleApp = styled.h1`\n  margin-bottom: 30px;\n`;\n\nexport const TitleContactList = styled.h2`\n  margin-bottom: 20px;\n`;\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContacts = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 4px;\n  font-size: 20px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n`;\n\nexport const FieldInput = styled(Field)`\n  width: 100%;\n  min-height: 40px;\n  padding-left: 38px;\n  margin-bottom: 30px;\n  border: 1px solid rgba(46, 47, 66, 0.4);\n  border-radius: 4px;\n  outline: transparent;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border-color: black;\n  }\n`;\n\nexport const AddContactBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 12px 22px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  color: #000000;\n  background-color: #ecd9c6;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ffc61a;\n  }\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  margin-bottom: 20px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsOperations';\nimport toast from 'react-hot-toast';\nimport {\n  AddContactBtn,\n  ErrMessage,\n  FieldInput,\n  FormContacts,\n  FormLabel,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors';\n\nconst numberRegExp = /^(\\+?\\d+)?\\s*(\\(\\d+\\))?[\\s-]*([\\d-]*)$/;\nconst nameRegExp = /^(([a-zA-Z' -]{1,80})|([а-яА-ЯЁёІіЇїҐґЄє' -]{1,80}))$/u;\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      nameRegExp,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz.'\n    )\n    .min(2, 'Too Short!')\n    .required('Required!'),\n  number: Yup.string()\n    .matches(\n      numberRegExp,\n      'Phone number must be digits and can contain dashes, parentheses and can start with +'\n    )\n    .min(16, 'Too short!')\n    .max(18, 'Too long!')\n    .required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={ContactSchema}\n        onSubmit={(values, actions) => {\n          const existingContact = contacts.find(\n            contact => contact.name === values.name\n          );\n          if (existingContact) {\n            toast.error(`${values.name} is already in contacts.`);\n          } else {\n            dispatch(addContact(values));\n          }\n          actions.resetForm();\n        }}\n      >\n        <FormContacts>\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <FieldInput id=\"name\" name=\"name\" placeholder=\"\" />\n          <ErrMessage name=\"name\" component=\"div\" />\n\n          <FormLabel htmlFor=\"number\">Number</FormLabel>\n          <FieldInput\n            id=\"number\"\n            name=\"number\"\n            placeholder=\"+XX(XXX)-XXX-XX-XX\"\n            type=\"tel\"\n          />\n          <ErrMessage name=\"number\" component=\"div\" />\n\n          <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n        </FormContacts>\n      </Formik>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nexport const FilterFieldInput = styled.input`\n  width: 100%;\n  min-height: 40px;\n  padding-left: 38px;\n  margin-bottom: 30px;\n  border: 1px solid rgba(46, 47, 66, 0.4);\n  border-radius: 4px;\n  outline: transparent;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border-color: black;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterFieldInput, FilterLabel } from './Filter.styled';\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <FilterLabel htmlFor=\"findContacts\">Find contacts by name</FilterLabel>\n      <FilterFieldInput\n        type=\"text\"\n        name=\"findContacts\"\n        value={filter}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border: 1.5px solid black;\n  border-radius: 10px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 30px;\n  padding: 8px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  letter-spacing: 0.04em;\n  color: #000000;\n  background-color: #ecd9c6;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ffc61a;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      {\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"100\"\n          visible={true}\n        />\n      }\n    </LoaderWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { DeleteBtn, ListItem } from './ConatctList.styled';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error === 'Rejected' &&\n        toast.error(\"We're sorry, something went wrong! Try again, please.\", {\n          style: {\n            fontSize: '18px',\n            padding: '16px',\n            position: 'center-center',\n          },\n        })}\n      {visibleContacts.length > 0 && (\n        <ul>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ListItem key={id}>\n              {name}: {number}\n              <DeleteBtn\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </DeleteBtn>\n            </ListItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { Toaster } from 'react-hot-toast';\nimport { AppWrap, TitleApp, TitleContactList } from './Contacts.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  return (\n    <AppWrap>\n      <TitleApp>Phonebook</TitleApp>\n      <ContactForm />\n      <TitleContactList>Contacts</TitleContactList>\n      <Filter />\n      <ContactList />\n      <Toaster />\n    </AppWrap>\n  );\n}\n"],"names":["AppWrap","styled","TitleApp","TitleContactList","FormContacts","Form","FormLabel","FieldInput","Field","AddContactBtn","ErrMessage","ErrorMessage","ContactSchema","Yup","shape","name","matches","min","required","number","max","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","initialValues","validationSchema","onSubmit","values","actions","find","contact","toast","addContact","resetForm","htmlFor","id","placeholder","component","type","FilterLabel","FilterFieldInput","Filter","filter","selectFilter","value","onChange","evt","changeFilter","target","ListItem","DeleteBtn","LoaderWrapper","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ContactList","loading","selectIsLoading","error","selectError","visibleContacts","selectVisibleContacts","useEffect","fetchContacts","style","fontSize","padding","position","length","map","onClick","deleteContact","Contacts"],"sourceRoot":""}